% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ATA_class.R
\docType{class}
\name{ATA.config-class}
\alias{ATA.config-class}
\alias{config.ATA}
\title{config.ATA}
\usage{
config.ATA(itemSelection, MIP = NULL)
}
\arguments{
\item{itemSelection}{A list containing item selection criteria. This should have the following entries:
\itemize{
  \item{\code{method}} The type of criteria. Accepts \code{MAXINFO, TIF, TCC}.
  \item{\code{infoType}} The type of information. Accepts \code{FISHER}.
  \item{\code{targetLocation}} A numeric vector containing the locations of target points. (e.g. \code{c(-1, 0, 1)})
  \item{\code{targetValue}} A numeric vector containing the target values at each location. This should have the same length with \code{targetLocation}. Ignored if method is \code{MAXINFO}.
  \item{\code{targetWeight}} A numeric vector containing the weights for each location. This should have the same length with \code{targetlocation}. Defaults to a vector of 1s.
}}

\item{MIP}{A list containing solver options. This should have the following entries:
\itemize{
  \item{\code{solver}} The type of solver. Accepts \code{SYMPHONY, GUROBI, GLPK, LPSOLVE}.
  \item{\code{verbosity}} Verbosity level of the solver. Defaults to -2.
  \item{\code{timeLimit}} Time limit in seconds passed onto the solver. Defaults to 60. Used in solvers \code{SYMPHONY, GUROBI, GLPK}.
  \item{\code{gapLimit}} Termination criteria in relative scale passed onto the solver. Defaults to .05. Used in solvers  \code{SYMPHONY, GUROBI}.
  \item{\code{gapLimitAbs}} Termination criteria in absolute scale passed onto the solver. Defaults to 1. Used in solver \code{GUROBI}.
}}
}
\description{
Create an \code{\linkS4class{ATA.config}} object for Automated Test Assembly (ATA).
}
\examples{
conf.1 = config.ATA(list(method = "MAXINFO",
                         infoType = "FISHER",
                         targetLocation = c(-1, 0, 1),
                         targetWeight   = c( 1, 1, 1)))

conf.2 = config.ATA(list(method = "TIF",
                         infoType = "FISHER",
                         targetLocation = c(-1, 0, 1),
                         targetWeight   = c( 1, 1, 1),
                         targetValue    = c( 8,10,12)))

conf.3 = config.ATA(list(method = "TCC",
                         infoType = "FISHER",
                         targetLocation = c(-1, 0, 1),
                         targetWeight   = c( 1, 1, 1),
                         targetValue    = c(10,15,20)))
}
