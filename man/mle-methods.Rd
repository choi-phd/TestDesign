% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theta_functions.R
\docType{methods}
\name{mle}
\alias{mle}
\alias{mle,item_pool-method}
\title{Compute maximum likelihood estimates of theta}
\usage{
mle(
  object,
  resp,
  start_theta = NULL,
  max_iter = 100,
  crit = 0.001,
  select = NULL,
  truncate = FALSE,
  theta_range = c(-4, 4),
  max_change = 1,
  do_Fisher = TRUE
)

\S4method{mle}{item_pool}(
  object,
  resp,
  start_theta = NULL,
  max_iter = 50,
  crit = 0.005,
  select = NULL,
  truncate = FALSE,
  theta_range = c(-4, 4),
  max_change = 1,
  do_Fisher = TRUE
)
}
\arguments{
\item{object}{an \code{\linkS4class{item_pool}} object.}

\item{resp}{a vector of item responses from one person on all items in the \code{object} argument.}

\item{start_theta}{(optional) initial theta values.}

\item{max_iter}{maximum number of iterations. (default = \code{100})}

\item{crit}{convergence criterion to use. (default = \code{0.001})}

\item{select}{(optional) if item indices are supplied, only the specified items are used. The \code{resp} argument must have the same length with the length of this argument.}

\item{truncate}{set \code{TRUE} to impose a bound on the estimate.}

\item{theta_range}{a range of theta values to bound the estimate. Only effective when \code{truncate} is \code{TRUE}. (default = \code{c(-4, 4)})}

\item{max_change}{upper bound to impose on the change in theta between iterations. Changes exceeding this value will be replaced by \code{max_change}. (default = \code{1.0})}

\item{do_Fisher}{set \code{TRUE} to use Fisher scoring. (default = \code{TRUE})}
}
\value{
\code{\link{mle}} returns a list containing estimated values.

\itemize{
  \item{\code{th}} theta value.
  \item{\code{se}} standard error.
  \item{\code{conv}} \code{TRUE} if estimation converged.
  \item{\code{trunc}} \code{TRUE} if truncating was applied on \code{th}.
}
}
\description{
\code{\link{mle}} is a function to compute maximum likelihood estimates of theta.
}
\examples{
mle(itempool_fatigue, resp_fatigue_data[10, ])
mle(itempool_fatigue, resp_fatigue_data[10, 1:20], select = 1:20)
}
