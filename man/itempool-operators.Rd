% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/itempool_operators.R
\docType{methods}
\name{itempool-operators}
\alias{itempool-operators}
\alias{subsetItemPool}
\alias{combineItemPool}
\alias{-.item_pool}
\alias{==.item_pool}
\alias{[,item_pool,numeric-method}
\alias{[,item_pool,numeric,ANY,ANY-method}
\alias{c,item_pool-method}
\alias{makeItemPoolCluster}
\alias{makeItemPoolCluster,item_pool-method}
\alias{==.pool_cluster}
\title{Basic operators for item pool objects}
\usage{
subsetItemPool(pool, select = NULL)

combineItemPool(pool1, pool2)

\method{-}{item_pool}(pool1, pool2)

\method{==}{item_pool}(pool1, pool2)

\S4method{[}{item_pool,numeric}(x, i, j, ..., drop = TRUE)

\S4method{c}{item_pool}(x, ...)

makeItemPoolCluster(x, ..., names = NULL)

\S4method{makeItemPoolCluster}{item_pool}(x, ..., names = NULL)

\method{==}{pool_cluster}(pool_cluster1, pool_cluster2)
}
\arguments{
\item{pool}{An \code{\linkS4class{item_pool}} object.}

\item{select, i, j}{item indices to use in subsetting.}

\item{pool1, pool2}{an \code{\linkS4class{item_pool}} object.}

\item{x, ...}{\code{\linkS4class{item_pool}} objects.}

\item{drop}{not used, exists for compatibility.}

\item{names}{(optional) names to use for \code{\linkS4class{item_pool}}.}

\item{pool_cluster1}{a \code{\linkS4class{pool_cluster}} object.}

\item{pool_cluster2}{a \code{\linkS4class{pool_cluster}} object.}
}
\description{
\code{\link{subsetItemPool}} is a function to create a subset of an \code{\linkS4class{item_pool}} object.

\code{pool1 + pool2} combines two \code{\linkS4class{item_pool}} objects.

\code{pool1 - pool2} excludes the items in \code{pool2} from \code{pool1}.

\code{pool1 == pool2} tests equality of the two item_pool objects.

Create a \code{\linkS4class{pool_cluster}} object.

\code{pool_cluster1 == pool_cluster2} tests equality of the two pool_cluster objects.
}
\examples{
subitempool <- subsetItemPool(itempool_science, 1:100)

itempool <- combineItemPool(itempool_science, itempool_reading)

subitempool <- subsetItemPool(itempool_science, 1:500)
itempool <- itempool_science - subitempool

itempool <- subsetItemPool(itempool_science, 1:500)
subitempool1 <- itempool_science - itempool
subitempool2 <- subsetItemPool(itempool_science, 501:1000)
subitempool1 == subitempool2  ## TRUE


cluster <- makeItemPoolCluster(itempool_science, itempool_reading)
cluster1 <- makeItemPoolCluster(itempool_science, itempool_reading)
cluster2 <- makeItemPoolCluster(cluster1@pools[[1]], cluster1@pools[[2]])
cluster1 == cluster2  ## TRUE

}
